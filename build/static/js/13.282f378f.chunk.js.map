{"version":3,"sources":["assets/svg/icon.js","components/util-components/CustomIcon/index.js","components/layout-components/PageHeaderAlt.js","views/app-views/pages/catalog/add-product/index.js"],"names":["GoogleSVG","viewBox","width","height","fill","d","id","FacebookSVG","ImageSvg","cx","cy","r","CustomIcon","React","forwardRef","props","_","component","svg","className","connect","navType","theme","children","background","overlap","useState","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","Dragger","Upload","Option","Select","rules","name","required","message","description","price","comparePrice","taxRate","cost","imageUploadProps","multiple","listType","showUploadList","action","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","categories","tags","AddProduct","Form","useForm","form","submitLoading","setSubmitLoading","history","useHistory","discardAdd","push","layout","initialValues","heightUnit","widthUnit","weightUnit","Flex","mobileFlex","justifyContent","alignItems","onClick","htmlType","validateFields","then","values","setTimeout","success","catch","info","loading","marginTop","gutter","xs","sm","md","title","Item","label","placeholder","TextArea","rows","formatter","value","replace","parser","min","max","onChange","e","handleUploadChange","uploadedImg","src","alt","uploadLoading","LoadingOutlined","map","elm","mode"],"mappings":"oNAkBaA,G,KAAY,kBACvB,qBAAKC,QAAQ,gBAAgBC,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAA3D,SACE,8BACE,sBACEA,KAAK,UACLC,EAAE,sQAIJ,sBACED,KAAK,UACLC,EAAE,2JAGJ,mBAAGC,GAAG,oBAAN,SACE,4BACE,4BACE,4BACE,sBACEF,KAAK,UACLC,EAAE,iQAQZ,sBACED,KAAK,UACLC,EAAE,yUAKJ,sBACED,KAAK,UACLC,EAAE,yOAIJ,sBACED,KAAK,UACLC,EAAE,gXAKJ,sBACED,KAAK,UACLC,EAAE,gQAQGE,EAAc,kBACzB,qBAAKN,QAAQ,gBAAgBC,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAA3D,SACE,8BACE,sBACEA,KAAK,UACLC,EAAE,6LAGJ,sBACED,KAAK,UACLC,EAAE,0PAIJ,sBACED,KAAK,UACLC,EAAE,kOAwBGG,EAAW,kBACtB,qBAAKP,QAAQ,gBAAgBC,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAA3D,SACE,8BACE,4BACE,sBAAMA,KAAK,UAAUC,EAAE,kJAGzB,sBAAMD,KAAK,UAAUC,EAAE,iGACvB,oBAAGC,GAAG,aAAN,UACE,4BACE,sBAAMF,KAAK,UAAUC,EAAE,4MAIzB,sBAAMD,KAAK,UAAUC,EAAE,6NAGvB,sBAAMD,KAAK,UAAUC,EAAE,+HAEvB,sBAAMD,KAAK,UAAUC,EAAE,wFACvB,wBAAQD,KAAK,UAAUK,GAAG,UAAUC,GAAG,UAAUC,EAAE,YACnD,sBAAMP,KAAK,UAAUC,EAAE,6HAEvB,8BACE,sBAAMD,KAAK,UAAUC,EAAE,4QAGvB,sBAAMD,KAAK,UAAUC,EAAE,uHAEvB,sBAAMD,KAAK,UAAUC,EAAE,qSAGvB,sBAAMD,KAAK,UAAUC,EAAE,yM,qECjJ3BO,EAAaC,IAAMC,YAAW,SAACC,EAAOC,GAAR,OAAc,cAAC,IAAD,CAAMC,UAAWF,EAAMG,IAAKC,UAAWJ,EAAMI,eAEhFP,O,oLC8CAQ,eALS,SAAC,GAEvB,MAAO,CAAEC,QAF4B,EAAZC,MACjBD,WAI8B,GAAzBD,EA9Cc,SAAC,GAAyD,IAAxDG,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,WAAYL,EAAiC,EAAjCA,UAAWM,EAAsB,EAAtBA,QAASJ,EAAa,EAAbA,QAAa,EAC/CK,mBAAS,GADsC,mBAC9EC,EAD8E,KACjEC,EADiE,KAE/EC,EAAMC,iBAAO,MAElBC,qBAAU,WACV,GAAIV,IAAYW,IAAc,CAC7B,IAAMC,EAAaC,OAAOC,WACpBC,EAAiBP,EAAIQ,QAAQC,YACnCV,GAAiBK,EAAaG,GAAkB,MAE/C,CAACf,IAaJ,OACC,qBACCQ,IAAKA,EACLV,UAAS,0BAAqBA,GAAwB,GAA7C,YAAmDM,GAAW,WACvEc,MAfe,WAChB,IAAIA,EAAQ,CAAEC,gBAAiBhB,EAAU,cAAUA,EAAV,KAA0B,QAOnE,OANIH,IAAYW,MACfO,EAAME,aAAed,EACrBY,EAAMG,YAAcf,EACpBY,EAAMI,YAAc,EACpBJ,EAAMK,aAAe,GAEfL,EAOCM,GAHR,SAKExB,IAAYW,IAAe,qBAAKb,UAAU,YAAf,SAA4BI,IAAkB,mCAAGA,S,2CCxBxEuB,EAAYC,IAAZD,QACAE,EAAWC,IAAXD,OAEFE,EAAQ,CACbC,KAAM,CACL,CACCC,UAAU,EACVC,QAAS,8BAGXC,YAAa,CACZ,CACCF,UAAU,EACVC,QAAS,qCAGXE,MAAO,CACN,CACCH,UAAU,EACVC,QAAS,+BAGXG,aAAc,GAEdC,QAAS,CACR,CACCL,UAAU,EACVC,QAAS,0BAGXK,KAAM,CACL,CACCN,UAAU,EACVC,QAAS,4BAKNM,EAAmB,CACrBR,KAAM,OACJS,UAAU,EACVC,SAAU,eACVC,gBAAgB,EAChBC,OAAQ,oDAGNC,EAAe,SAAAC,GACnB,IAAMC,EAA2B,eAAdD,EAAKE,MAAuC,cAAdF,EAAKE,KACjDD,GACHb,IAAQe,MAAM,qCAEhB,IAAMC,EAASJ,EAAKK,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACHhB,IAAQe,MAAM,gCAETF,GAAcG,GAGnBE,EAAa,CAAC,SAAU,OAAQ,QAAS,UAAW,WACpDC,EAAO,CAAC,SAAU,OAAQ,QAAS,SAAU,UAAW,OAAQ,WA4JvDC,UA1JI,SAAA1D,GAAU,IAAD,EACT2D,IAAKC,UAAbC,EADiB,sBAEkBlD,oBAAS,GAF3B,mBAEjBmD,EAFiB,KAEFC,EAFE,KAGpBC,EAAUC,cAERC,EAAa,WACfF,EAAQG,KAAR,4BAiBP,OACC,8BACU,eAAC,IAAD,CACRC,OAAO,WACPP,KAAMA,EACNzB,KAAK,kBACLhC,UAAU,2BACViE,cAAe,CACdC,WAAY,KACZC,UAAW,KACXC,WAAY,MARL,UAWR,cAAC,EAAD,CAAepE,UAAU,gBAAgBM,SAAO,EAAhD,SACC,qBAAKN,UAAU,YAAf,SACC,eAACqE,EAAA,EAAD,CAAMrE,UAAU,OAAOsE,YAAY,EAAOC,eAAe,UAAUC,WAAW,SAA9E,UACC,oBAAIxE,UAAU,OAAd,6FACA,sBAAKA,UAAU,OAAf,UACC,cAAC,IAAD,CAAQyE,QAASX,EAAY9D,UAAU,OAAvC,8DAGA,cAAC,IAAD,CAAQgD,KAAK,UAAU0B,SAAS,SAASD,QAAS,kBAlClDd,GAAiB,QACjBF,EAAKkB,iBAAiBC,MAAK,SAAAC,GACzBC,YAAW,WACTnB,GAAiB,GACfzB,IAAQ6C,QAAR,kBAA2BF,EAAO7C,KAAlC,qBACA8B,MACD,SACFkB,OAAM,SAAAC,GACPtB,GAAiB,GACjBzB,IAAQe,MAAM,wCAyBoDiC,QAASxB,EAA7E,wEAOJ,qBAAK1D,UAAU,YAAYoB,MAAO,CAAE+D,UAAW,KAA/C,SACwB,eAAC,IAAD,CAAKC,OAAQ,GAAb,UACI,eAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,eAAC,IAAD,CAAMC,MAAM,aAAZ,UACI,cAAC,IAAKC,KAAN,CAAWzD,KAAK,OAAO0D,MAAM,eAAe3D,MAAOA,EAAMC,KAAzD,SACI,cAAC,IAAD,CAAO2D,YAAY,mBAEvB,cAAC,IAAKF,KAAN,CAAWzD,KAAK,cAAc0D,MAAM,cAAc3D,MAAOA,EAAMI,YAA/D,SACI,cAAC,IAAMyD,SAAP,CAAgBC,KAAM,SAG9B,cAAC,IAAD,CAAML,MAAM,UAAZ,SACI,eAAC,IAAD,CAAKJ,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKE,KAAN,CAAWzD,KAAK,QAAQ0D,MAAM,QAAQ3D,MAAOA,EAAMK,MAAnD,SACA,cAAC,IAAD,CACIpC,UAAU,QACV8F,UAAW,SAAAC,GAAK,MAAI,YAAKA,GAAQC,QAAQ,wBAAyB,MAClEC,OAAQ,SAAAF,GAAK,OAAIA,EAAMC,QAAQ,cAAe,WAItD,cAAC,IAAD,CAAKX,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKE,KAAN,CAAWzD,KAAK,eAAe0D,MAAM,gBAAgB3D,MAAOA,EAAMM,aAAlE,SACI,cAAC,IAAD,CACIrC,UAAU,QACV+F,MAAO,EACPD,UAAW,SAAAC,GAAK,MAAI,YAAKA,GAAQC,QAAQ,wBAAyB,MAClEC,OAAQ,SAAAF,GAAK,OAAIA,EAAMC,QAAQ,cAAe,WAI1D,cAAC,IAAD,CAAKX,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKE,KAAN,CAAWzD,KAAK,OAAO0D,MAAM,gBAAgB3D,MAAOA,EAAMQ,KAA1D,SACI,cAAC,IAAD,CACIvC,UAAU,QACV8F,UAAW,SAAAC,GAAK,MAAI,YAAKA,GAAQC,QAAQ,wBAAyB,MAClEC,OAAQ,SAAAF,GAAK,OAAIA,EAAMC,QAAQ,cAAe,WAI1D,cAAC,IAAD,CAAKX,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAAC,IAAKE,KAAN,CAAWzD,KAAK,UAAU0D,MAAM,WAAW3D,MAAOA,EAAMO,QAAxD,SACI,cAAC,IAAD,CACItC,UAAU,QACVkG,IAAK,EACLC,IAAK,IACLL,UAAW,SAAAC,GAAK,gBAAOA,EAAP,MAChBE,OAAQ,SAAAF,GAAK,OAAIA,EAAMC,QAAQ,IAAK,mBAO5D,eAAC,IAAD,CAAKX,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,UACI,cAAC,IAAD,CAAMC,MAAM,QAAZ,SACI,cAAC7D,EAAD,2BAAaa,GAAb,IAA+BK,aAAcA,EAAcuD,SAAU,SAAAC,GAAC,OAAGzG,EAAM0G,mBAAmBD,IAAlG,SAEQzG,EAAM2G,YACN,qBAAKC,IAAK5G,EAAM2G,YAAaE,IAAI,SAASzG,UAAU,cAEpD,8BAEQJ,EAAM8G,cACN,gCACI,cAACC,EAAA,EAAD,CAAiB3G,UAAU,+BAC3B,qBAAKA,UAAU,OAAf,0BAGJ,gCACI,cAACP,EAAA,EAAD,CAAYO,UAAU,YAAYD,IAAKV,MACvC,uEAOxB,eAAC,IAAD,CAAMmG,MAAM,eAAZ,UACI,cAAC,IAAKC,KAAN,CAAWzD,KAAK,WAAW0D,MAAM,WAAjC,SACI,cAAC,IAAD,CAAQ1F,UAAU,QAAQ2F,YAAY,WAAtC,SAEQvC,EAAWwD,KAAI,SAAAC,GAAG,OACd,cAAChF,EAAD,CAAkBkE,MAAOc,EAAzB,SAA+BA,GAAlBA,UAK7B,cAAC,IAAKpB,KAAN,CAAWzD,KAAK,OAAO0D,MAAM,OAA7B,SACA,cAAC,IAAD,CAAQoB,KAAK,OAAO1F,MAAO,CAAErC,MAAO,QAAU4G,YAAY,OAA1D,SACKtC,EAAKuD,KAAI,SAAAC,GAAG,OAAI,cAAChF,EAAD,UAAmBgF,GAANA","file":"static/js/13.282f378f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ReplySVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path\r\n      d=\"M537.016,909.264c-7.034,0-14.006-2.372-19.671-6.97L18.508,496.986C11.232,491.055,7,482.161,7,472.781\r\n\t\t\tc0-9.374,4.232-18.267,11.508-24.204L517.345,43.272c9.318-7.551,22.258-9.104,33.064-3.959\r\n\t\t\tc10.871,5.175,17.785,16.135,17.785,28.162v219.277c243.388,16.107,436.483,219.246,436.483,466.625v62.353\r\n\t\t\tc0,12.18-7.097,23.235-18.147,28.314c-11.054,5.119-24.054,3.292-33.311-4.626l-52.55-45.027\r\n\t\t\tc-93.318-79.986-210.359-126.841-332.476-133.66v217.36c0,12.022-6.914,22.986-17.785,28.158\r\n\t\t\tC546.146,908.262,541.58,909.268,537.016,909.264L537.016,909.264z M125.715,472.781L506.65,782.309V614.776\r\n\t\t\tc0-15.697,12.702-28.401,28.399-28.401c134.946,0,265.707,48.367,368.18,136.193l0.972,0.834\r\n\t\t\tc-2.664-201.286-167.231-364.213-369.148-364.213c-15.699,0-28.4-12.704-28.4-28.399V163.258\r\n\t\t\tC506.65,163.258,125.715,472.781,125.715,472.781L125.715,472.781z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const GoogleSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <path\r\n        fill=\"#59C36A\"\r\n        d=\"M827.301,875.968c-84.521,71.388-194.169,116.693-313.528,116.693c-177.609,0-333.52-97.848-418.041-240.62\r\n\t\t\t\tl31.646-145.858l140.255-26.039c32.553,105.078,130.779,182.178,246.141,182.178c55.964,0,107.937-17.703,150.767-49.112\r\n\t\t\t\tl134.777,20.558L827.301,875.968z\"\r\n      />\r\n      <path\r\n        fill=\"#00A66C\"\r\n        d=\"M827.301,875.968l-27.984-142.201l-134.777-20.558c-42.83,31.409-94.803,49.112-150.767,49.112v230.34\r\n\t\t\t\tC633.132,992.661,742.779,947.355,827.301,875.968z\"\r\n      />\r\n      <g id=\"Connected_Home_1_\">\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <path\r\n                fill=\"#FFDA2D\"\r\n                d=\"M256.781,505.331c0,26.267,3.998,51.396,10.851,74.813l-171.9,171.897\r\n\t\t\t\t\t\t\t\tc-42.83-71.957-69.29-156.48-69.29-246.71c0-90.233,26.46-174.754,69.29-246.711l137.965,23.743l33.936,148.154\r\n\t\t\t\t\t\t\t\tC260.779,453.932,256.781,479.06,256.781,505.331L256.781,505.331z\"\r\n              />\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <path\r\n        fill=\"#4086F4\"\r\n        d=\"M1001.103,505.331c0,148.48-68.719,281.547-173.802,370.637L664.539,713.209\r\n\t\t\t\tc33.121-23.988,61.107-55.971,79.384-93.66h-230.15c-15.993,0-28.556-12.567-28.556-28.554V419.666\r\n\t\t\t\tc0-15.99,12.563-28.554,28.556-28.554h450.78c13.707,0,25.698,9.708,27.983,23.412\r\n\t\t\t\tC998.247,444.225,1001.103,475.063,1001.103,505.331L1001.103,505.331z\"\r\n      />\r\n      <path\r\n        fill=\"#4175DF\"\r\n        d=\"M743.924,619.549c-18.275,37.689-46.264,69.672-79.382,93.66l162.759,162.759\r\n\t\t\t\tc105.083-89.09,173.802-222.153,173.802-370.637c0-30.269-2.855-61.106-8.567-90.807c-2.284-13.704-14.278-23.412-27.984-23.412\r\n\t\t\t\tH513.772v228.437H743.924z\"\r\n      />\r\n      <path\r\n        fill=\"#FF641A\"\r\n        d=\"M835.297,154.107c0.571,7.996-2.855,15.422-7.996,21.131L705.086,296.881\r\n\t\t\t\tc-9.704,10.278-25.694,11.421-37.118,2.855c-45.119-33.693-98.231-51.396-154.195-51.396\r\n\t\t\t\tc-115.361,0-213.588,77.095-246.141,182.178L95.731,258.62C180.253,115.848,336.163,18,513.772,18\r\n\t\t\t\tc113.647,0,224.439,41.88,311.244,114.978C831.298,138.119,834.723,146.112,835.297,154.107L835.297,154.107z\"\r\n      />\r\n      <path\r\n        fill=\"#F03800\"\r\n        d=\"M667.966,299.736c11.422,8.567,27.411,7.423,37.119-2.855l122.214-121.643\r\n\t\t\t\tc5.143-5.709,8.569-13.133,7.996-21.131c-0.575-7.997-3.999-15.988-10.279-21.13C738.212,59.88,627.42,18,513.772,18v230.34\r\n\t\t\t\tC569.736,248.34,622.849,266.043,667.966,299.736z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport const FacebookSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <path\r\n        fill=\"#4A7AFF\"\r\n        d=\"M1015.363,506.525c0,279.749-226.775,506.524-506.525,506.524c-279.749,0-506.524-226.775-506.524-506.524\r\n\tC2.313,226.775,229.089,0,508.838,0C788.588,0,1015.363,226.775,1015.363,506.525z\"\r\n      />\r\n      <path\r\n        fill=\"#FFFFFF\"\r\n        d=\"M663.688,149.015v114.697c0,0-131.686-19.113-131.686,65.843v84.957h118.941L636.08,544.072H532.002v337.709\r\n\tH400.316V544.072l-112.572-2.126V414.512H398.19V316.81c0,0-7.288-145.343,135.938-172.038\r\n\tC593.602,133.68,663.688,149.015,663.688,149.015z\"\r\n      />\r\n      <path\r\n        fill=\"#DCE1EB\"\r\n        d=\"M663.688,263.712V149.015c0,0-70.086-15.335-129.56-4.243c-9.291,1.73-17.932,3.973-25.993,6.623v730.387\r\n\th23.867V544.072h104.07l14.871-129.561H532.002c0,0,0,0,0-84.957C532.002,244.599,663.688,263.712,663.688,263.712z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport const TwitterSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path fill=\"#03A9F4\" d=\"M1006.701,163.276c-6.71-7.344-17.513-9.249-26.334-4.649c-9.059,4.107-18.431,7.508-28.042,10.136\r\n      c14.983-19.171,26.285-40.938,33.356-64.208c3.113-11.713-3.859-23.729-15.573-26.834c-6.251-1.668-12.92-0.484-18.218,3.219\r\n      c-33.365,18.063-68.824,31.936-105.59,41.3c-75.666-71.428-190.939-80.332-276.685-21.372\r\n      c-66.047,44.667-102.419,121.845-94.796,201.207c-143.168-12.197-274.902-83.141-363.884-195.983\r\n      c-4.574-5.527-11.491-8.575-18.653-8.206c-7.262,0.436-13.833,4.443-17.545,10.703c-30.202,49.365-38.951,108.916-24.231,164.878\r\n      c7.548,28.757,20.485,55.813,38.136,79.74c-7.942-3.894-15.434-8.682-22.292-14.268c-9.413-7.632-23.229-6.193-30.86,3.22\r\n      c-3.17,3.909-4.904,8.788-4.912,13.815c1.314,81.186,45.891,155.489,116.917,194.842c-9.586-1.175-19.04-3.204-28.264-6.054\r\n      c-11.607-3.491-23.846,3.088-27.338,14.687c-1.519,5.06-1.166,10.505,1.004,15.326c30.826,69.055,92.447,119.488,166.24,136.039\r\n      c-70.303,39.665-151.25,56.33-231.5,47.657c-10.399-1.323-20.255,5.002-23.385,15.015c-3.228,9.931,0.993,20.765,10.095,25.891\r\n      c98.254,58.384,210.029,90.139,324.3,92.16c109.632-0.403,216.707-33.152,307.808-94.132\r\n      C820.37,681.983,928.769,474.763,913.672,289.359c37.184-27.533,69.439-61.153,95.403-99.446\r\n      C1014.406,181.519,1013.437,170.586,1006.701,163.276z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const ImageSvg = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <g>\r\n        <path fill=\"#E5E1E5\" d=\"M163.033,1011.756L2.746,191.353c-4.863-24.879,11.365-48.991,36.245-53.852l124.042-24.234l194.642-42.82\r\n          l279.663,941.308H163.033V1011.756z\"/>\r\n      </g>\r\n      <path fill=\"#99E6FC\" d=\"M163.033,680.979L68.355,196.393l94.678-18.501l143.802-23.615l62.994,584.599L163.033,680.979z\"/>\r\n      <g id=\"XMLID_159_\">\r\n        <g>\r\n          <path fill=\"#F9F7F8\" d=\"M1014.357,64.9v957.461c0,25.351-20.549,45.899-45.899,45.899H208.93\r\n            c-25.351,0-45.901-20.549-45.901-45.899V64.9c0-25.35,20.551-45.9,45.901-45.9h759.528C993.809,19,1014.357,39.551,1014.357,64.9\r\n            z\"/>\r\n        </g>\r\n        <path fill=\"#EFEDEF\" d=\"M574.473,971.206c-90.848,0-164.495-73.646-164.495-164.493V19H208.93\r\n          c-25.351,0-45.901,20.551-45.901,45.9v957.461c0,25.351,20.551,45.899,45.901,45.899h759.528\r\n          c25.351,0,45.899-20.549,45.899-45.899v-51.155H574.473z\"/>\r\n        <path fill=\"#FEC165\" d=\"M950.933,737.554V234.861c0-7.122-5.774-12.896-12.897-12.896H239.354c-7.12,0-12.896,5.774-12.896,12.896\r\n          v502.692H950.933z\"/>\r\n        <path fill=\"#FDB441\" d=\"M409.978,221.965H239.354c-7.12,0-12.896,5.774-12.896,12.896v502.692h183.52V221.965z\"/>\r\n        <circle fill=\"#FEE903\" cx=\"588.693\" cy=\"600.309\" r=\"246.948\"/>\r\n        <path fill=\"#F4D902\" d=\"M409.978,770.729V429.889c-42.274,44.316-68.229,104.339-68.229,170.419\r\n          C341.748,666.391,367.703,726.41,409.978,770.729z\"/>\r\n        <g>\r\n          <path fill=\"#99E6FC\" d=\"M902.813,668.316c-57.591-25.393-122.604-28.267-182.203-8.034l-51.163,17.336\r\n            c-52.369,17.759-109.135,17.759-161.505,0l-51.163-17.336c-59.602-20.232-124.611-17.358-182.182,8.034l-48.142,21.226v105.269\r\n            l80.12,33.354h599.658l44.699-33.354V689.542L902.813,668.316z\"/>\r\n          <path fill=\"#62DBFB\" d=\"M409.978,828.165V649.264c-45.72-6.239-92.605,0.184-135.379,19.053l-48.141,21.226v105.269\r\n            l80.119,33.354H409.978z\"/>\r\n          <path fill=\"#62DBFB\" d=\"M950.933,794.811v61.709c0,5.452-4.424,9.878-9.879,9.878H236.332c-5.453,0-9.877-4.426-9.877-9.878\r\n            v-61.709l48.142-21.229c57.57-25.39,122.58-28.268,182.182-8.055l51.163,17.358c52.37,17.759,109.136,17.759,161.505,0\r\n            l51.163-17.358c59.6-20.213,124.612-17.335,182.203,8.055L950.933,794.811z\"/>\r\n          <path fill=\"#01D0FB\" d=\"M236.332,866.397h184.86c-7.214-18.51-11.215-38.625-11.215-59.685v-52.188\r\n            c-45.72-6.231-92.605,0.192-135.379,19.061l-48.141,21.226v61.71c-0.003,5.451,4.421,9.875,9.874,9.875V866.397z\"/>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)","import React from 'react'\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst CustomIcon = React.forwardRef((props, _) => <Icon component={props.svg} className={props.className}/>)\r\n\r\nexport default CustomIcon\r\n","import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","\r\nimport React, { useState } from 'react'\r\nimport { Upload, InputNumber, message, Select, Input, Row, Col, Card, Form, Button } from 'antd';\r\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ImageSvg } from 'assets/svg/icon';\r\nimport CustomIcon from 'components/util-components/CustomIcon'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst rules = {\r\n\tname: [\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please enter product name',\r\n\t\t}\r\n\t],\r\n\tdescription: [\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please enter product description',\r\n\t\t}\r\n\t],\r\n\tprice: [\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please enter product price',\r\n\t\t}\r\n\t],\r\n\tcomparePrice: [\t\t\r\n\t],\r\n\ttaxRate: [\t\t\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please enter tax rate',\r\n\t\t}\r\n\t],\r\n\tcost: [\t\t\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please enter item cost',\r\n\t\t}\r\n\t]\r\n}\r\n\r\nconst imageUploadProps = {\r\n    name: 'file',\r\n      multiple: true,\r\n      listType: \"picture-card\",\r\n      showUploadList: false,\r\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n  }\r\n  \r\n  const beforeUpload = file => {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\nconst categories = ['Cloths', 'Bags', 'Shoes', 'Watches', 'Devices']\r\nconst tags = ['Cotton', 'Nike', 'Sales', 'Sports', 'Outdoor', 'Toys', 'Hobbies' ]\r\n\r\nconst AddProduct = props => {\r\n    const [form] = Form.useForm();\r\n    const [submitLoading, setSubmitLoading] = useState(false)\r\n    let history = useHistory();\r\n\r\n    const discardAdd = () => {\r\n        history.push(`/app/main/catalog/items`)\r\n    }\r\n\r\n    const onFinish = () => {\r\n        setSubmitLoading(true)\r\n        form.validateFields().then(values => {\r\n          setTimeout(() => {\r\n            setSubmitLoading(false)\r\n              message.success(`Created ${values.name} to product list`);\r\n              discardAdd()\r\n          }, 1500);\r\n        }).catch(info => {\r\n          setSubmitLoading(false)\r\n          message.error('Please enter all required field ');\r\n        });\r\n    };\r\n\r\n\treturn (\r\n\t\t<div>\r\n            <Form\r\n\t\t\t\tlayout=\"vertical\"\r\n\t\t\t\tform={form}\r\n\t\t\t\tname=\"advanced_search\"\r\n\t\t\t\tclassName=\"ant-advanced-search-form\"\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\theightUnit: 'cm',\r\n\t\t\t\t\twidthUnit: 'cm',\r\n\t\t\t\t\tweightUnit: 'kg'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<PageHeaderAlt className=\"border-bottom\" overlap>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Flex className=\"py-2\" mobileFlex={false} justifyContent=\"between\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t<h2 className=\"mb-3\">Добавить товар</h2>\r\n\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<Button onClick={discardAdd} className=\"mr-2\">\r\n                                    Отменить\r\n                                </Button>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" onClick={() => onFinish()} loading={submitLoading} >\r\n                                    Добавить\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</PageHeaderAlt>\r\n\t\t\t\t<div className=\"container\" style={{ marginTop: 113 }}>\r\n                            <Row gutter={16}>\r\n                                <Col xs={24} sm={24} md={17}>\r\n                                    <Card title=\"Basic Info\">\r\n                                        <Form.Item name=\"name\" label=\"Product name\" rules={rules.name}>\r\n                                            <Input placeholder=\"Product Name\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"description\" label=\"Description\" rules={rules.description}>\r\n                                            <Input.TextArea rows={4} />\r\n                                        </Form.Item>\r\n                                    </Card>\r\n                                    <Card title=\"Pricing\">\r\n                                        <Row gutter={16}>\r\n                                            <Col xs={24} sm={24} md={12}>\r\n                                                <Form.Item name=\"price\" label=\"Price\" rules={rules.price}>\r\n                                                <InputNumber\r\n                                                    className=\"w-100\"\r\n                                                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                                                />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={24} md={12}>\r\n                                                <Form.Item name=\"comparePrice\" label=\"Compare price\" rules={rules.comparePrice}>\r\n                                                    <InputNumber\r\n                                                        className=\"w-100\"\r\n                                                        value={0}\r\n                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={24} md={12}>\r\n                                                <Form.Item name=\"cost\" label=\"Cost per item\" rules={rules.cost}>\r\n                                                    <InputNumber\r\n                                                        className=\"w-100\"\r\n                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={24} md={12}>\r\n                                                <Form.Item name=\"taxRate\" label=\"Tax rate\" rules={rules.taxRate}>\r\n                                                    <InputNumber\r\n                                                        className=\"w-100\"\r\n                                                        min={0}\r\n                                                        max={100}\r\n                                                        formatter={value => `${value}%`}\r\n                                                        parser={value => value.replace('%', '')}\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={7}>\r\n                                    <Card title=\"Media\">\r\n                                        <Dragger {...imageUploadProps} beforeUpload={beforeUpload} onChange={e=> props.handleUploadChange(e)}>\r\n                                            {\r\n                                                props.uploadedImg ? \r\n                                                <img src={props.uploadedImg} alt=\"avatar\" className=\"img-fluid\" /> \r\n                                                : \r\n                                                <div>\r\n                                                    {\r\n                                                        props.uploadLoading ? \r\n                                                        <div>\r\n                                                            <LoadingOutlined className=\"font-size-xxl text-primary\"/>\r\n                                                            <div className=\"mt-3\">Uploading</div>\r\n                                                        </div> \r\n                                                        : \r\n                                                        <div>\r\n                                                            <CustomIcon className=\"display-3\" svg={ImageSvg}/>\r\n                                                            <p>Click or drag file to upload</p>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                        </Dragger>\r\n                                    </Card>\r\n                                    <Card title=\"Organization\">\r\n                                        <Form.Item name=\"category\" label=\"Category\" >\r\n                                            <Select className=\"w-100\" placeholder=\"Category\">\r\n                                                {\r\n                                                    categories.map(elm => (\r\n                                                        <Option key={elm} value={elm}>{elm}</Option>\r\n                                                    ))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"tags\" label=\"Tags\" >\r\n                                        <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Tags\">\r\n                                            {tags.map(elm => <Option key={elm}>{elm}</Option>)}\r\n                                        </Select>\r\n                                        </Form.Item>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddProduct"],"sourceRoot":""}