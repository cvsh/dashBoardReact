{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/pages/clients/client-list/index.js"],"names":["renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","ClientsList","useState","clients","setClients","loading","setLoadign","history","useHistory","useEffect","timer","setTimeout","fetch","then","response","json","catch","err","clearTimeout","tableColumns","title","dataIndex","render","_","record","href","r","user","push","username","sorter","compare","a","b","toLowerCase","company","elm","danger","userId","filter","item","message","success","content","duration","bodyStyle","columns","dataSource","rowKey"],"mappings":"sIAIMA,EAAe,SAAAC,GACpB,OAAO,cAAC,IAAD,2BAAYA,GAAZ,IAAmBC,UAAS,qBAAgBD,EAAME,MAAlD,SAA2DF,EAAMG,SAgC1DC,IA7Ba,SAAAJ,GAAU,IAC7BK,EAAqFL,EAArFK,KAAMC,EAA+EN,EAA/EM,OAAQC,EAAuEP,EAAvEO,SAAUC,EAA6DR,EAA7DQ,GAAIN,EAAyDF,EAAzDE,KAAMO,EAAmDT,EAAnDS,IAAKC,EAA8CV,EAA9CU,KAAMC,EAAwCX,EAAxCW,KAAMC,EAAkCZ,EAAlCY,MAAOC,EAA2Bb,EAA3Ba,IAAKV,EAAsBH,EAAtBG,KAAMW,EAAgBd,EAAhBc,YAC7E,OACC,sBAAKb,UAAU,0CAAf,UACEF,EAAa,CAACW,OAAMD,MAAKP,OAAMS,OAAMC,QAAOC,MAAKV,SAClD,sBAAKF,UAAU,OAAf,UACC,gCAEEa,EACA,qBAAKC,QAAS,kBAAMD,EAAY,CAACT,OAAME,WAAUE,MAAKD,QAAMP,UAAU,+BAAtE,SAAsGI,IAEtG,qBAAKJ,UAAU,qBAAf,SAAqCI,IAEtC,+BAAOC,OAER,qBAAKL,UAAU,oCAAf,SAAoDM,Y,yICwEzCS,UAxFK,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACpBC,EADoB,KACXC,EADW,OAEMF,oBAAS,GAFf,mBAEjBG,EAFiB,KAERC,EAFQ,KAGlBC,EAAUC,cAEjBC,qBAAU,WACH,IAAMC,EAAQC,YAAW,WACrBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIX,EAAWW,MACxBC,OAAM,SAACC,GACJb,EAAW,SAEnBE,GAAW,KACZ,KACH,OAAO,kBAAMY,aAAaR,MAC9B,IAEA,IAWMS,EAAe,CACjB,CACIC,MAAO,OACPC,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAAJ,OACJ,qBAAKtC,UAAU,SAAf,SACI,mBAAGuC,KAAM,kBAAM,GAAOzB,QAAS,SAAA0B,GAAC,OAjB1BC,EAiB2CH,OAhB7DjB,EAAQqB,KAAR,0CAAgDD,EAAKlC,KADpC,IAACkC,GAiBN,SAA0D,cAAC,IAAD,CAAcjC,IAAK,+EAAgFJ,KAAMkC,EAAOlC,KAAME,SAAUgC,EAAOK,gBAGzMC,OAAQ,CACJC,QAAS,SAACC,EAAGC,GAGT,OAFAD,EAAIA,EAAE1C,KAAK4C,gBACTD,EAAIA,EAAE3C,KAAK4C,gBACG,EAAID,EAAID,EAAI,EAAI,KAI5C,CACIZ,MAAO,gBACPC,UAAW,SAEf,CACID,MAAO,eACPC,UAAW,SAEf,CACID,MAAO,UACPC,UAAW,UACXC,OAAQ,SAACC,EAAGC,GAAJ,OACJ,8BACKA,EAAOW,QAAQ7C,SAI5B,CACI8B,MAAO,GACPC,UAAW,UACXC,OAAQ,SAACC,EAAGa,GAAJ,OACJ,qBAAKlD,UAAU,aAAf,SACI,cAAC,IAAD,CAASkC,MAAM,SAAf,SACI,cAAC,IAAD,CAAQiB,QAAM,EAAC1C,KAAM,cAAC,IAAD,IAAoBK,QAAS,WA/CxD,IAAAsC,IA+C0EF,EAAI3C,GA9C9FW,EACCD,EAAQoC,QAAO,SAAAC,GAAI,OAAIA,EAAK/C,KAAO6C,MAEpCG,IAAQC,QAAQ,CAAEC,QAAQ,gBAAD,OAAkBL,GAAUM,SAAU,KA2CqChD,KAAK,iBAO1G,OACC,8BACC,cAAC,IAAD,CAAMiD,UAAW,CAAC,QAAW,OAA7B,SACC,cAAC,IAAD,CACgBxC,QAASA,EACTyC,QAAS3B,EAAc4B,WAAY5C,EAAS6C,OAAO","file":"static/js/19.80c94846.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Card, Table, Tooltip, message, Button } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ClientsList = () => {\r\n\tlet [clients, setClients] = useState([])\r\n    let [loading, setLoadign] = useState(true)\r\n    let history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n                .then(response => response.json())\r\n                .then(json => setClients(json))\r\n                .catch((err) => {\r\n                    setClients(null);\r\n                })\r\n            setLoadign(false)\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n\t}, []);\r\n\r\n    const clientDetail = (user) => {\r\n        history.push(`/app/main/clients/client-detail/${user.id}`)\r\n    }\r\n\r\n\tlet deleteUser = userId => {\r\n\t\tsetClients(\r\n\t\t\tclients.filter(item => item.id !== userId),\r\n\t\t)\r\n\t\tmessage.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n\t}\r\n\r\n    const tableColumns = [\r\n        {\r\n            title: 'User',\r\n            dataIndex: 'name',\r\n            render: (_, record) => (\r\n                <div className=\"d-flex\">\r\n                    <a href={() => false} onClick={r => clientDetail(record)}><AvatarStatus src={\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"} name={record.name} subTitle={record.username}/></a>\r\n                </div>\r\n            ),\r\n            sorter: {\r\n                compare: (a, b) => {\r\n                    a = a.name.toLowerCase();\r\n                      b = b.name.toLowerCase();\r\n                    return a > b ? -1 : b > a ? 1 : 0;\r\n                },\r\n            },\r\n        },\r\n        {\r\n            title: 'Email address',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Phone number',\r\n            dataIndex: 'phone',\r\n        },\r\n        {\r\n            title: 'Company',\r\n            dataIndex: 'company',\r\n            render: (_, record) => (\r\n                <div>\r\n                    {record.company.name}\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'actions',\r\n            render: (_, elm) => (\r\n                <div className=\"text-right\">\r\n                    <Tooltip title=\"Delete\">\r\n                        <Button danger icon={<DeleteOutlined />} onClick={() => {deleteUser(elm.id)}} size=\"small\"/>\r\n                    </Tooltip>\r\n                </div>\r\n            )\r\n        }\r\n    ];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card bodyStyle={{'padding': '0px'}}>\r\n\t\t\t\t<Table\r\n                    loading={loading}\r\n                    columns={tableColumns} dataSource={clients} rowKey='id' \r\n                />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ClientsList\r\n"],"sourceRoot":""}