{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/pages/catalog/catalog-list/data.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/pages/catalog/catalog-list/index.js"],"names":["renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","CatalogList","EllipsisDropdown","overlay","menu","placement","trigger","EllipsisOutlined","defaultProps","Option","Select","categories","Goods","history","useHistory","useState","list","setList","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","deleteRow","row","data","length","forEach","elm","utils","deleteArrayRow","tableColumns","title","dataIndex","render","_","record","image","sorter","a","b","antdTableSorter","price","displayType","value","Math","round","toFixed","prefix","thousandSeparator","stock","Flex","alignItems","stockCount","status","Item","DeleteOutlined","rowSelection","onChange","key","rows","justifyContent","mobileFlex","placeholder","SearchOutlined","e","currentTarget","searchArray","wildCardSearch","onSearch","defaultValue","style","minWidth","filterArray","map","push","PlusCircleOutlined","block","columns","dataSource","rowKey","preserveSelectedRowKeys"],"mappings":"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","file":"static/js/18.fe404fa1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","\r\nconst CatalogList = [\r\n\t{\r\n        \"id\": 12,\r\n        \"name\": \"Blue Jacket\",\r\n        \"image\": \"/img/thumbs/thumb-7.jpg\",\r\n        \"category\": \"Cloths\",\r\n        \"price\": 77,\r\n        \"stock\": 46\r\n    },\r\n    {\r\n        \"id\": 13,\r\n        \"name\": \"White Backpack\",\r\n        \"image\": \"/img/thumbs/thumb-8.jpg\",\r\n        \"category\": \"Bags\",\r\n        \"price\": 139,\r\n        \"stock\": 28\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"name\": \"Black Sneaker\",\r\n        \"image\": \"/img/thumbs/thumb-9.jpg\",\r\n        \"category\": \"Shoes\",\r\n        \"price\": 99,\r\n        \"stock\": 52\r\n    },\r\n    {\r\n        \"id\": 15,\r\n        \"name\": \"Gray Hoodies\",\r\n        \"image\": \"/img/thumbs/thumb-10.jpg\",\r\n        \"category\": \"Cloths\",\r\n        \"price\": 68,\r\n        \"stock\": 92\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"name\": \"Blue Backpack\",\r\n        \"image\": \"/img/thumbs/thumb-11.jpg\",\r\n        \"category\": \"Bags\",\r\n        \"price\": 70,\r\n        \"stock\": 0\r\n    },\r\n    {\r\n        \"id\": 17,\r\n        \"name\": \"White Sneaker\",\r\n        \"image\": \"/img/thumbs/thumb-12.jpg\",\r\n        \"category\": \"Shoes\",\r\n        \"price\": 29,\r\n        \"stock\": 18\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"name\": \"Strip Analog Watch\",\r\n        \"image\": \"/img/thumbs/thumb-13.jpg\",\r\n        \"category\": \"Watches\",\r\n        \"price\": 389,\r\n        \"stock\": 7\r\n    },\r\n    {\r\n        \"id\": 19,\r\n        \"name\": \"Red Beat Headphone\",\r\n        \"image\": \"/img/thumbs/thumb-14.jpg\",\r\n        \"category\": \"Devices\",\r\n        \"price\": 86,\r\n        \"stock\": 0\r\n    },\r\n    {\r\n        \"id\": 20,\r\n        \"name\": \"Apple Macbook Pro\",\r\n        \"image\": \"/img/thumbs/thumb-15.jpg\",\r\n        \"category\": \"Devices\",\r\n        \"price\": 1599,\r\n        \"stock\": 27\r\n    },\r\n    {\r\n        \"id\": 21,\r\n        \"name\": \"Bronze Analog Watch\",\r\n        \"image\": \"/img/thumbs/thumb-16.jpg\",\r\n        \"category\": \"Watches\",\r\n        \"price\": 729,\r\n        \"stock\": 6\r\n    },\r\n    {\r\n        \"id\": 22,\r\n        \"name\": \"Apple Watch\",\r\n        \"image\": \"/img/thumbs/thumb-17.jpg\",\r\n        \"category\": \"Devices\",\r\n        \"price\": 388,\r\n        \"stock\": 51\r\n    },\r\n    {\r\n        \"id\": 23,\r\n        \"name\": \"Antique Analog Watch\",\r\n        \"image\": \"/img/thumbs/thumb-18.jpg\",\r\n        \"category\": \"Watches\",\r\n        \"price\": 599,\r\n        \"stock\": 30\r\n    }\r\n]\r\n\r\nexport default CatalogList;","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","\r\nimport CatalogList from './data'\r\nimport { Card, Table, Select, Input, Button, Badge, Menu } from 'antd';\r\nimport { DeleteOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport NumberFormat from 'react-number-format';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport utils from 'utils';\r\n\r\nconst { Option } = Select\r\n\r\nconst categories = ['Cloths', 'Bags', 'Shoes', 'Watches', 'Devices']\r\n\r\nconst getStockStatus = stockCount => {\r\n\tif(stockCount >= 10) {\r\n\t\treturn <><Badge status=\"success\" /><span>In Stock</span></>\r\n\t}\r\n\tif(stockCount < 10 && stockCount > 0) {\r\n\t\treturn <><Badge status=\"warning\" /><span>Limited Stock</span></>\r\n\t}\r\n\tif(stockCount === 0) {\r\n\t\treturn <><Badge status=\"error\" /><span>Out of Stock</span></>\r\n\t}\r\n\treturn null\r\n}\r\n\r\nconst Goods = () => {\r\n    let history = useHistory();\r\n    const [list, setList] = useState(CatalogList)\r\n    const [selectedRows, setSelectedRows] = useState([])\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n    const dropdownMenu = row => (\r\n      <Menu>\r\n        <Menu.Item onClick={() => deleteRow(row)}>\r\n          <Flex alignItems=\"center\">\r\n            <DeleteOutlined />\r\n            <span className=\"ml-2\">{selectedRows.length > 0 ? `Delete (${selectedRows.length})` : 'Delete'}</span>\r\n          </Flex>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    \r\n    const addProduct = () => {\r\n      history.push(`/app/main/catalog/add-product`)\r\n    }\r\n    \r\n    const deleteRow = row => {\r\n      const objKey = 'id'\r\n      let data = list\r\n      if(selectedRows.length > 1) {\r\n        selectedRows.forEach(elm => {\r\n          data = utils.deleteArrayRow(data, objKey, elm.id)\r\n          setList(data)\r\n          setSelectedRows([])\r\n        })\r\n      } else {\r\n        data = utils.deleteArrayRow(data, objKey, row.id)\r\n        setList(data)\r\n      }\r\n    }\r\n  \r\n    const tableColumns = [\r\n      {\r\n        title: 'ID',\r\n        dataIndex: 'id'\r\n      },\r\n      {\r\n        title: 'Product',\r\n        dataIndex: 'name',\r\n        render: (_, record) => (\r\n          <div className=\"d-flex\">\r\n            <AvatarStatus size={60} type=\"square\" src={record.image} name={record.name}/>\r\n          </div>\r\n        ),\r\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n      },\r\n      {\r\n        title: 'Category',\r\n        dataIndex: 'category',\r\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'category')\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        render: price => (\r\n          <div>\r\n            <NumberFormat\r\n              displayType={'text'} \r\n              value={(Math.round(price * 100) / 100).toFixed(2)} \r\n              prefix={'$'} \r\n              thousandSeparator={true} \r\n            />\r\n          </div>\r\n        ),\r\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'price')\r\n      },\r\n      {\r\n        title: 'Stock',\r\n        dataIndex: 'stock',\r\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'stock')\r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'stock',\r\n        render: stock => (\r\n          <Flex alignItems=\"center\">{getStockStatus(stock)}</Flex>\r\n        ),\r\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'stock')\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'actions',\r\n        render: (_, elm) => (\r\n          <div className=\"text-right\">\r\n            <EllipsisDropdown menu={dropdownMenu(elm)}/>\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    \r\n    const rowSelection = {\r\n      onChange: (key, rows) => {\r\n        setSelectedRows(rows)\r\n        setSelectedRowKeys(key)\r\n      }\r\n    };\r\n\r\n    const handleShowCategory = value => {\r\n      if(value !== 'All') {\r\n        const key = 'category'\r\n        const data = utils.filterArray(CatalogList, key, value)\r\n        setList(data)\r\n      } else {\r\n        setList(CatalogList)\r\n      }\r\n    }\r\n\r\n    const onSearch = e => {\r\n      const value = e.currentTarget.value\r\n      const searchArray = e.currentTarget.value? list : CatalogList\r\n      const data = utils.wildCardSearch(searchArray, value)\r\n      setList(data)\r\n      setSelectedRowKeys([])\r\n    }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\tdefaultValue=\"All\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tonChange={handleShowCategory} \r\n\t\t\t\t\t\t\tplaceholder=\"Category\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"All\">All</Option>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcategories.map(elm => (\r\n\t\t\t\t\t\t\t\t\t<Option key={elm} value={elm}>{elm}</Option>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button onClick={addProduct} type=\"primary\" icon={<PlusCircleOutlined />} block>Добавить товар</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id' \r\n\t\t\t\t\trowSelection={{\r\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\r\n\t\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\r\n\t\t\t\t\t\t...rowSelection,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Goods"],"sourceRoot":""}